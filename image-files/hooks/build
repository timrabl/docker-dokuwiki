#!/bin/bash
# hooks/build
# https://docs.docker.com/docker-cloud/builds/advanced/

# $IMAGE_NAME var is injected into the build so the tag is correct.
echo "[***] Build hook running"

# should be always latest, since there is no release-canidate version anymore
# maybe later multi version support
C1=$(echo ${DOCKER_TAG} | cut -d "-" -f 1)
C2=$(echo ${DOCKER_TAG} | cut -s -d "-" -f 2)
C3=$(echo ${DOCKER_TAG} | cut -s -d "-" -f 3)

echo "C1: $C1 C2: $C2 C3: $C3"

if [ ! -z "${C1}" ]; then
    if [ "${C1}" == "latest" ]; then
        echo "[**custom Hook**] Set Version tag to: latest"
        FLAG_VERSION="--build-arg VERSION=latest"
    #elif [ "${C1}" == "rc" ]; then
    #    echo "[***] Set Version tag to: release-candidate"
    #    FLAG_VERSION="--build-arg VERSION=release-candidate"
    else
        echo "[**custom hook**] Invalid version Tag: ${DOCKER_TAG}"
        FLAG_VERSION=""
    fi
fi

if [ ! -z "${C2}" ]; then
    if [ "${C2}" == "installer" ]; then
        echo "[**custom hook**] Set second tag to: installer"
        FLAG_TWO="--build-arg INSTALLER=true"
    elif [ "${C2}" == "ldap" ]; then
        echo "[**custom hook**] Set second tag to: ldap"
        FLAG_TWO="--build-arg LDAP=true"
    else
        echo "[**custom hook**] Invalid secound Tag: ${DOCKER_TAG}"
        FLAG_TWO=""
    fi
fi

if [ ! -z "${C3}" ]; then
    if [ "${C2}" != "${C3}" ]; then
        if [ "${C3}" == "installer" ]; then
            echo "[**custom hook**] Set third tag to: installer"
            FLAG_THREE="--build-arg INSTALLER=true"
        elif [ "${C3}" == "ldap" ]; then
            echo "[**custom hook**] Set third tag to: ldap"
            FLAG_THREE="--build-arg LDAP=true"
        else
            echo "[**custom hook**] Invalid Tag: ${DOCKER_TAG}"
            FLAG_THREE=""
        fi
    fi
fi

docker build -t ${IMAGE_NAME} ${FLAG_VERSION} ${FLAG_TWO} ${FLAG_THREE} .
